//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteWeb.srjobs {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srjobs.wsjobsSoap")]
    public interface wsjobsSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Agregar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Agregar(int Job_Id, string Job_decs, int Min_lvl, int Max_lvl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Agregar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarAsync(int Job_Id, string Job_decs, int Min_lvl, int Max_lvl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Actualizar(int Job_Id, string Job_decs, int Min_lvl, int Max_lvl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarAsync(int Job_Id, string Job_decs, int Min_lvl, int Max_lvl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Eliminar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Eliminar(int Job_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Eliminar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarAsync(int Job_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Buscar(int Job_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarAsync(int Job_Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsjobsSoapChannel : ClienteWeb.srjobs.wsjobsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsjobsSoapClient : System.ServiceModel.ClientBase<ClienteWeb.srjobs.wsjobsSoap>, ClienteWeb.srjobs.wsjobsSoap {
        
        public wsjobsSoapClient() {
        }
        
        public wsjobsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsjobsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsjobsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsjobsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet Listar() {
            return base.Channel.Listar();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarAsync() {
            return base.Channel.ListarAsync();
        }
        
        public string[] Agregar(int Job_Id, string Job_decs, int Min_lvl, int Max_lvl) {
            return base.Channel.Agregar(Job_Id, Job_decs, Min_lvl, Max_lvl);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarAsync(int Job_Id, string Job_decs, int Min_lvl, int Max_lvl) {
            return base.Channel.AgregarAsync(Job_Id, Job_decs, Min_lvl, Max_lvl);
        }
        
        public string[] Actualizar(int Job_Id, string Job_decs, int Min_lvl, int Max_lvl) {
            return base.Channel.Actualizar(Job_Id, Job_decs, Min_lvl, Max_lvl);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarAsync(int Job_Id, string Job_decs, int Min_lvl, int Max_lvl) {
            return base.Channel.ActualizarAsync(Job_Id, Job_decs, Min_lvl, Max_lvl);
        }
        
        public string[] Eliminar(int Job_Id) {
            return base.Channel.Eliminar(Job_Id);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarAsync(int Job_Id) {
            return base.Channel.EliminarAsync(Job_Id);
        }
        
        public System.Data.DataSet Buscar(int Job_Id) {
            return base.Channel.Buscar(Job_Id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarAsync(int Job_Id) {
            return base.Channel.BuscarAsync(Job_Id);
        }
    }
}
